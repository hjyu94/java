# 직렬화 (Serialization)

    Object ---(Serialization)--> String
           <--(Deserialization)--

    - 인스턴스 상태를 그대로 저장하거나 네트웍으로 전송하고 이를 다시 복원(Deserialization) 하는 방식
    - ObjectInputStream, ObjectOutputStream 을 사용 (보조 스트림)


# Serializable 인터페이스
    - 인스턴스 내용을 파일에 저장하거나 네트웍으로 전송할 때 Serializable 해야 한다.
    - 직렬화는 인스턴스의 내용이 외부(파일, 네트웍)로 유출되는 것!
    - 프로그래머가 객체의 직렬화 가능 여부를 명시해야 한다. mark interface 라고 한다.
    (따로 구현 코드는 없는데 직렬화가 가능하다는 표시를 하는 인터페이스)

    class person implements Serializable {
        String name;
        transient job; // 직렬화 불가능 (ex: 소켓)
    }


# Externallizable interface
    - Serializable interface: 구현할 코드가 없는 마크 인터페이스
    - Externalizable interface: 직접 읽고 쓰는 것을 구현 할 수 있다.

    class Person_2 implements Externalizable {
        @Override
        public void writeExternal(ObjectOutput objectOutput) throws IOException { }
        // writeObject() 를 구현

        @Override
        public void readExternal(ObjectInput objectInput) throws IOException, ClassNotFoundException { }
        // readObject() 를 구현
    }
