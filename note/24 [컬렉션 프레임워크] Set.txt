@ 컬렉션 프레임워크 - Set

Iterator 로 순회하기
    - get() 없음
    - Collection 의 개체를 순회하는 인터페이스

    HashSet<String> set = new HashSet<String>();
    set.add("ㄱㄱㄱ");
    set.add("ㄴㄴㄴ");
    set.add("ㄷㄷㄷ");
    set.add("ㄱㄱㄱ");

    -> ㄱㄱㄱ는 한번만 들어간다.
    -> 만약에 ArrayList 였다면 ㄱㄱㄱ 두번 들어간다. 중복 허용

    Iterator ir = set.iterator();
    (Iterator<String> ir = set.iterator(); 도 가능)

    while(ir.hasNext()) {
       String str = ir.next();
       System.out.println(str);
    }

[ex]
    public class MemberHashSet {
       private HashSet<Member> hashSet;

       public MemberHashSet() {
          hashSet = new HashSet<Member>();
       }

       public void addMember(Member member) {
          hashSet.add(member);
       }

       public boolean removeMember(int memberId) {
          // 이 때 iterator 사용한다!
          Iterator<Member> ir = hashSet.iterator();
          while(ir.hasNext()) {
             Member member = ir.next();
             if( member.getMemberId() == memberId) {
                hashSet.removee(member);
                return true;
             }
             return false;
          }
       }

      public void showAllMember() {
          for (Member member : hashSet) {
             System.out.println(member);
          }
       }
    }

    psvm() {
        MemberHashSet manager = MemberHashSet memberHashSet = new MemberHashSet();
        manager.addMember(new Member(1, "ㄱㄱ"));
        manager.addMember(new Member(2, "ㄴㄴ"));
        manager.addMember(new Member(1, "ㄱㄱ2"));
        manager.showAllMember();
    }

    [결과]
        Member(memberId=1, name=ㄱㄱ)
        Member(memberId=1, name=ㄱㄱ2)
        Member(memberId=2, name=ㄴㄴ)

        여기서는 id 1 로 ㄱㄱ, ㄱㄱ2 둘 다 들어가버린다.
        물리적으로 두 객체가 다른 객체이기 때문에


# equals(), hashCode() 재정의

    한 id 당 하나의 멤버만 존재하게 하려면
    관리할 객체가 논리적으로 같다는 것이 무엇인지
    equals(), hashCode() 를 재정의해야 한다


    public class MemberHashSet {
       ...

       @Override
       public int hashCode(){
          return.memberId;
       }

       @Override
       public boolean equals(Object obj) {
          if (obj instanceof Member) {
             Member member = (Member)obj;
             return (this.memberId == member.memberId);
          }
          return false;
       }
    }

    다시 main() 을 Run 해보면 중복된 아이디로 멤버가 두개 들어가지 않음을 볼 수 있다.
    Member(memberId=1, name=ㄱㄱ)
    Member(memberId=2, name=ㄴㄴ)
