@ 연산자 실수하기 좋은 예제 / 비트 연산자

Q)
    int num1 = 10;
    int i = 2;
    boolean value = ((num1 = num1 + 20) < 30) && ((i = i + 2) < 30))

    --> 모든 명령 실행 후 num1? i? value?

A)
    num1 = 30,
    i = 2,
    value = false

    && 연산의 앞 연산의 결과가 이미 false이므로
    뒤는 연산하지 않기 때문!

    && 는 앞이 true면 뒤를 더 보지 않음.
    || 는 앞이 true여도 뒤까지 본다.


# 비트 연산자
    ~: 1의 보수
    &: AND
    |: OR
    ^: XOR (두개의 비트가 서로 다른 경우에 1)
    <<: 왼쪽 SHIFT
    >>: 오른쪽 SHIFT
    >>>: >>와 동일, 채워지는 비트가 부호와 상관없이 0